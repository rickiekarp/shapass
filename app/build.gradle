import java.text.SimpleDateFormat

buildscript {
    repositories {
        mavenCentral()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:2.1.0"
        classpath "org.openjfx:javafx-plugin:0.0.13"
    }
}

allprojects {
    apply plugin:'java'
    apply plugin:'kotlin'
    apply plugin:'application'

    apply plugin: "org.openjfx.javafxplugin"
    javafx {
        version = "23.0.1"
        modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.swing' ]
    }

    repositories {
        mavenCentral()
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21
    }

    application.mainClass.set("net.rickiekarp.shapass.Main")

    dependencies {
        api "com.squareup.okhttp3:okhttp:4.12.0"
        implementation "org.json:json:20240303"
        implementation "commons-io:commons-io:2.15.1"
        implementation "com.fasterxml.jackson.core:jackson-databind:2.17.0"
        implementation group: 'net.java.dev.jna', name: 'jna', version: '5.15.0'
        testImplementation "org.junit.jupiter:junit-jupiter-api:5.10.2"
        testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.10.2"
    }

//    tasks.register('fetchNativesLib', Exec) {
//        workingDir "."
//        group "build"
//        commandLine "rsync", "-rlvpt", "--mkpath", "pi:/mnt/raid2/applications/nginx/files/packages/libsha1pass/*", "src/main/resources/libs/natives"
//        doLast {
//            println "DONE!"
//        }
//    }

    test {
        useJUnitPlatform()
        testLogging {
            // Make sure output from standard out or error is shown in Gradle output
            showStandardStreams = true
        }
    }

    jar {
        println("Building " + project.name)

        def minorVersion = 0
        def publicVersion = 0

        if (minorVersion > 0) {
            publicVersion = new SimpleDateFormat("yy.MM.dd").format(new Date()) + '.' + minorVersion
        } else {
            publicVersion = new SimpleDateFormat("yy.MM.dd").format(new Date())
        }

        manifest {
            attributes(
                    'Class-Path': configurations.runtimeClasspath.collect { it.getName() }.join(' '),
                    'Main-Class': application.mainClass.get(),
                    'Build-Time': new SimpleDateFormat("yyMMddHHmm").format(new Date()),
                    'Version': publicVersion
            )
        }
    }
}

wrapper {
    gradleVersion = "8.13"
}